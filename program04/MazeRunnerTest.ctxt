#BlueJ class context
comment0.target=MazeRunnerTest
comment0.text=\r\n\ \ Class\ to\ test\ all\ MazeRunner\ methods.\r\n\r\n\ \ @author\ Richard\ Nguyen\ (906512730)\r\n\ \ @version\ (2022.09.19)\r\n
comment1.params=
comment1.target=MazeRunnerTest()
comment1.text=\r\n\ Creates\ a\ new\ MazeRunnerTest\ test\ object.\r\n
comment10.params=
comment10.target=void\ testClearMazeNet()
comment10.text=\r\n\ method\ to\ test\ net\ clearMaze()\r\n
comment11.params=
comment11.target=void\ testClearMazeFlower()
comment11.text=\r\n\ method\ to\ test\ flower\ clearMaze()\r\n
comment12.params=
comment12.target=void\ testKeepRight()
comment12.text=\r\n\ method\ to\ test\ keepRight()\ with\ runner\ needing\ to\ turn\ with\r\n\ right\ shore\r\n
comment13.params=
comment13.target=void\ testKeepRightTwoOptions()
comment13.text=\r\n\ method\ to\ test\ keepRight()\ with\ runner\ needing\ to\ turn\ with\r\n\ right\ shore,\ with\ two\ paths\ it\ could\ take\r\n
comment14.params=
comment14.target=void\ testDeadEnd()
comment14.text=\r\n\ method\ to\ test\ deadEnd\ with\ runner\ needing\ to\ turn\ around\r\n
comment15.params=
comment15.target=void\ testDeadEndFailLeft()
comment15.text=\r\n\ method\ to\ test\ dead\ end\ conditional\ failure\r\n
comment16.params=
comment16.target=void\ testDeadEndFailAll()
comment16.text=\r\n\ method\ to\ test\ dead\ end\ conditional\ failure\ with\ all\ paths\r\n\ open\r\n
comment17.params=
comment17.target=void\ testDeadEndFailRight()
comment17.text=\r\n\ method\ to\ test\ dead\ end\ conditional\ failure\r\n
comment18.params=
comment18.target=void\ testForceLeft()
comment18.text=\r\n\ method\ to\ test\ forceLeft\ with\ runner\ needing\ to\ turn\ left\r\n
comment19.params=
comment19.target=void\ testDeadEndFailAhead()
comment19.text=\r\n\ method\ to\ test\ dead\ end\ conditional\ failure\ for\ no\ path\r\n\ ahead\r\n
comment2.params=
comment2.target=void\ testClearMaze()
comment2.text=\r\n\ method\ to\ test\ clearMaze()\ on\ whole\ testing\ island\r\n
comment20.params=
comment20.target=void\ testForceLeftFail()
comment20.text=\r\n\ method\ to\ test\ forceLeft\ conditional\ failure\r\n
comment21.params=
comment21.target=void\ testForceLeftFailRight()
comment21.text=\r\n\ method\ to\ test\ forceLeft\ conditional\ failure\r\n
comment22.params=
comment22.target=void\ testPickFlower()
comment22.text=\r\n\ method\ to\ test\ pickFlower()\ with\ flower\ ahead\ of\ runner\r\n
comment23.params=
comment23.target=void\ testDisableNet()
comment23.text=\r\n\ method\ to\ test\ disableNet()\ with\ net\ ahead\ of\ runner\r\n
comment24.params=
comment24.target=void\ testDisableNetTwice()
comment24.text=\r\n\ method\ to\ test\ disableNet()\ with\ two\ nets\ ahead\ of\ runner\r\n
comment25.params=
comment25.target=void\ testClearMazeEast()
comment25.text=\r\n\ method\ to\ test\ clearMaze()\ with\ only\ east\ path\r\n
comment26.params=
comment26.target=void\ testClearSecondPath()
comment26.text=\r\n\ method\ to\ test\ clearSecondPath()\r\n
comment27.params=
comment27.target=void\ testClearSecondPathFail()
comment27.text=\r\n\ method\ to\ test\ conditional\ failure\ of\ clearSecondPath()\r\n
comment28.params=
comment28.target=void\ testClearSecondPathFailX()
comment28.text=\r\n\ method\ to\ test\ conditional\ failure\ of\ clearSecondPath()\r\n\ with\ different\ x\ value\r\n
comment29.params=
comment29.target=void\ testClearSecondPathFailY()
comment29.text=\r\n\ method\ to\ test\ conditional\ failure\ of\ clearSecondPath()\r\n\ with\ different\ y\ value\r\n
comment3.params=
comment3.target=void\ testClearMaze2ndCondition()
comment3.text=\r\n\ method\ to\ test\ 2nd\ else\ if\ condition\ of\ clearMaze\r\n
comment4.params=
comment4.target=void\ testClearMazeCondition()
comment4.text=\r\n\ method\ to\ test\ while\ condition\ of\ clearMaze\r\n
comment5.params=
comment5.target=void\ testClearMazeWhile()
comment5.text=\r\n\ method\ to\ test\ while\ condition\ of\ clearMaze\r\n
comment6.params=
comment6.target=void\ testClearMazeWhileDeadEnd()
comment6.text=\r\n\ method\ to\ test\ while\ condition\ of\ clearMaze\ in\ a\ deadEnd\r\n
comment7.params=
comment7.target=void\ testClearMazeEastConditional()
comment7.text=\r\n\ method\ to\ test\ east\ path\ conditional\ in\ clearMaze()\r\n
comment8.params=
comment8.target=void\ testClearMazeNetSouth()
comment8.text=\r\n\ method\ to\ test\ conditional\ in\ clearMaze()\ with\ a\ south\r\n\ only\ path\r\n
comment9.params=
comment9.target=void\ testClearMazeNetAhead()
comment9.text=\r\n\ method\ to\ test\ net\ ahead\ conditional\ in\ clearMaze()\r\n
numComments=30
